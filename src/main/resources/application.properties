# =============================================
# ALOTRA MILK TEA - APPLICATION CONFIGURATION
# =============================================

# =============================================
# SERVER CONFIGURATION
# =============================================
server.port=8080
server.error.include-message=always
server.error.include-binding-errors=always

# =============================================
# DATABASE CONFIGURATION (SQL Server)
# =============================================
spring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=AloTraDB;encrypt=true;trustServerCertificate=true
spring.datasource.username=sa
spring.datasource.password=123456
spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver

# Connection Pool Settings
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000

# =============================================
# JPA/HIBERNATE CONFIGURATION
# =============================================
# DDL auto (create, create-drop, validate, update, none)
# Use 'none' because we already have database schema
spring.jpa.hibernate.ddl-auto=none

# Show SQL queries in console (disable in production)
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# SQL Server dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServerDialect

# Naming strategy
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl

# Enable lazy loading
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

# =============================================
# LOGGING CONFIGURATION
# =============================================
# Root logging level
logging.level.root=INFO

# Spring logging
logging.level.org.springframework.web=INFO
logging.level.org.springframework.security=DEBUG

# Hibernate logging
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Application logging
logging.level.com.alotra=DEBUG

# Log pattern
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# =============================================
# JWT CONFIGURATION
# =============================================
# JWT Secret Key (Change this in production!)
jwt.secret=AloTraSecretKeyForJWTTokenGenerationAndValidation2025MustBeLongEnough
jwt.expiration=86400000
# 86400000 ms = 24 hours
jwt.refresh-expiration=604800000
# 604800000 ms = 7 days

# =============================================
# CLOUDINARY CONFIGURATION
# =============================================
# Get these from cloudinary.com dashboard
# =====================================
# CLOUDINARY CONFIGURATION
# =====================================

# Replace with YOUR credentials from Cloudinary dashboard
cloudinary.cloud-name=deoh7ntyd
cloudinary.api-key=965641745138923
cloudinary.api-secret=GBgAHqM97U5e9ELcmEskXWrcen4




# Upload settings
cloudinary.upload.folder=alotra
cloudinary.upload.max-file-size=5242880
# 5MB in bytes

# =============================================
# FILE UPLOAD CONFIGURATION
# =============================================
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# =============================================
# THYMELEAF CONFIGURATION
# =============================================
spring.thymeleaf.cache=false
spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8

# =============================================
# STATIC RESOURCES CONFIGURATION
# =============================================
spring.web.resources.static-locations=classpath:/static/
spring.web.resources.cache.period=3600

# =============================================
# JACKSON CONFIGURATION (JSON)
# =============================================
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=Asia/Ho_Chi_Minh
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss

# =============================================
# WEBSOCKET CONFIGURATION
# =============================================
# WebSocket endpoint
websocket.endpoint=/ws
websocket.allowed-origins=http://localhost:8080,http://localhost:3000

# =============================================
# APPLICATION CONFIGURATION
# =============================================
# Application name
spring.application.name=AloTra Milk Tea

# Default admin account (will be created on startup if not exists)
app.admin.email=admin@alotra.com
app.admin.password=admin123
app.admin.username=admin

# Pagination defaults
app.pagination.default-page-size=12
app.pagination.max-page-size=100

# Order settings
app.order.shipping-fee.downtown=2.99
app.order.shipping-fee.suburbs=4.99
app.order.shipping-fee.rural=6.99
app.order.free-shipping-threshold=25.00

# =============================================
# SECURITY CONFIGURATION
# =============================================
# CORS settings
app.cors.allowed-origins=http://localhost:3000,http://localhost:8080
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.cors.allowed-headers=*
app.cors.allow-credentials=true

# =============================================
# EMAIL CONFIGURATION (Optional - for future use)
# =============================================
# spring.mail.host=smtp.gmail.com
# spring.mail.port=587
# spring.mail.username=your-email@gmail.com
# spring.mail.password=your-app-password
# spring.mail.properties.mail.smtp.auth=true
# spring.mail.properties.mail.smtp.starttls.enable=true

# =============================================
# ACTUATOR CONFIGURATION (Optional - for monitoring)
# =============================================
# management.endpoints.web.exposure.include=health,info
# management.endpoint.health.show-details=always

# =============================================
# DEVELOPMENT SETTINGS
# =============================================
# Hot reload for Thymeleaf templates in development


#spring.thymeleaf.cache=false

# DevTools settings
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true

# =============================================
# NOTES:
# =============================================
# 1. Change jwt.secret in production to a strong random string
# 2. Update Cloudinary credentials with your actual values
# 3. Set spring.jpa.show-sql=false in production
# 4. Set logging levels to WARN or ERROR in production
# 5. Enable HTTPS in production
# 6. Use environment variables for sensitive data in production
# =============================================



